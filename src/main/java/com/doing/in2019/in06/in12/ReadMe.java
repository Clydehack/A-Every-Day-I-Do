package com.doing.in2019.in06.in12;

public class ReadMe {

	/**
	 * Jolt - 软件业的奥斯卡
	 * 		评语：
	 * 			获得Jolt大奖的图书，都是作者们从平凡、重复、不起眼的日常开发实践中，总结的。
	 * 			所涉及的主题，都是普通软件开发人员每天面对的工作--代码阅读、撰写测试用例、修复软件问题等。
	 * 			但是这种貌似平淡无奇的工作，是否每一天，每一个项目都做好，着实拉开了开发人员的素质，也决定了软件企业开发出来的产品和服务的质量。
	 * 			“把简单的事千万次的做好，就是不简单的”，本套丛书建立在脚踏实地的实践基础上。
	 * 
	 * 
	 * 《面向对象分析与设计》
	 * 		软件的本质是什么？
	 * 			
	 * 			从不同角度看有不同的答案。有人认为是程序加文档，有人认为是人机交互，有人认为是增删改查，有人认为是抽象模型，有人认为是算法....
	 * 			PS：不论软件硬件，我个人理解是数据的处理黑匣子。软件用户的点击、输入输出；硬件传感器的输入信号、控制器的输出指令；本质都是数据输入，处理，输出。
	 * 			PS：也可以理解为函数，不过单纯的函数没有内部状态，通过内部状态的不同，对于同样的输入，会给出不同的输出。
	 * 				闭包的概念，也就是一个函数加上相关的上下文环境状态。
	 * 				也可以看成是拥有内部状态的函数，相当于一个简单的对象，反过来说，对象可以看成是几个闭包，他们共享了内部状态。
	 * 
	 * 			书中答案，计算机科学的基石是图灵机抽象：一个输入集合，一个输出集合，一个内部状态集合，一个计算规则集合。
	 * 			这个抽象十分强大，可以认为奶牛是图灵机：吃的是草，挤的是奶。
	 * 								表达式是图灵机：操作数是输入，求值是输出。
	 * 								函数也是图灵机：参数是输入，返回值是输出。
	 * 			于是，变成或设计软件就是在通用图灵机的基础上，设计一个具体的图灵机。
	 * 			具体就是需要设计软件接受怎样的输入，设计软件内部的状态，设计表示计算规则的代码，设计软件的输出。
	 * 			PS：函数时编程就是建立在这个抽象的基础上，非常简单。。。。  给定一个输入集合，经过函数处理，给出一个输出集合。
	 * 			PS：流行的架构设计模式Map-Reduce等等：一个计算集群仍然是一个图灵机。
	 * 
	 * 			总而言之，就是对问题的抽象（建模）（集合）（是这个意思就行）。
	 * 			同时，如无必要，勿增实体！
	 * 
	 * 
	 * 
	 */
}