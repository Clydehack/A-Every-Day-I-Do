package com.doing.in2019.in07.in11.Summary;

public class ReadMe {

	/**
	 * 总结：
	 *   
	 *   理想中自身完整的能力模型：
	 * 			
	 * 		技术能力：
	 * 
	 * 			电路电子	- PCB/FPC		- 可实现电子产品的设计、生产
	 * 			嵌入式	- MCU/ARM		- 可实现电子产品的智能化
	 * 			系统开发	- Linux/C语言	- 可以实现自己需要的电脑系统
	 * 			应用开发	- Web/Java语言	- 可以做出各种软件应用
	 * 			大数据	- Hadoop/Spark	- 可以做广告投放、智能推荐、数据统计决策
	 * 			人工智能	- AI/Python语言	- 机器学习、深度学习，可以让以上的产品自动化程度更高
	 * 	
	 * 		管理能力：
	 * 		
	 * 			RUP统一过程控制	- 管理研发团队效率、质量
	 * 			领域驱动设计		- 降低研发产品的复杂性、提高组件重用性
	 * 			测试驱动开发		- 提高代码质量
	 * 			GitFlow流程控制	- 管理代码的效率、质量
	 * 			CI/CD自动化运维	- 提高产品发布效率
	 * 		
	 * 		沟通能力：
	 * 			
	 * 			PPT		- 商务展示
	 * 			EXCEL	- 数据展示
	 * 			UML		- 设计展示
	 * 
	 * 
	 *   真实的能力模型：
	 *   
	 *   	时间有限，还要赚钱还房贷，最好主攻方向是技术前沿，工资高福利好，目前看最佳选择是大数据
	 *   	所以硬性要求：
	 *   		学历 - 小硕
	 *   		开发 - 高级
	 *   		算法 - 常用的全会，使用过最佳实践
	 *   	面试准备：
	 *   		
	 *   		一、项目中的难点和亮点：
	 *   			1.主索引系统是国家卫计委发下的文档，使用了领域驱动设计，而且是大型企业玩的转的，要挖掘整理
	 *   			2.用卡监测是统计型项目，使用了大量的复杂sql，值得总结整理sql语言和库优化
	 *   			3.闲置小程序是商业型项目，难点和亮点在于图结构的处理
	 *   		二、刷算法
	 *   			1.每天安排时间刷算法，剑指offer、牛客leetcode148题，容易的先刷，
	 *   			2.刷一题整理一题到博客，先懂思路后懂代码，
	 *   			3.一天至少1题，争取重复刷几遍到会手写。大厂必问算法，而且大都剑指offer或者leetcode原题或变形题，有些只问思路。
	 *   				https://www.jianshu.com/p/d4a13730a999		
	 *   				稳定性上：只有冒泡，归并、插入是稳定的；
	 *    				平均性能上：堆排序、归并排序、快速排序>希尔排序>>冒泡排序、插入排序、选择排序
	 *    				最好情况：冒泡排序和插入排序更好
	 *    				最坏情况：堆排序和归并排序
	 *    				快速排序性能不稳定
	 *   			4.要整理起来，避免刷过即忘
	 *   			5.由于数据结构算法基础不是很扎实，可以先从常见的八大排序开始熟悉，尽量能手写代码。再就是刷剑指offer，统一先刷实现思路
	 *   		三、补基础
	 *   			1.补Java集合源码、JVM、多线程。不看书，直接去网上搜面试题，最后把高频的整理了下来，直接刚面试题，借助博客辅助理解。
	 *   			2.同样，懂一题整理一题到博客。
	 *   			3.se和JVM理论较多，先记住能理解的，再就是理解性的背，面试前才机械性记忆。
	 *   			4.并发编程可以从常见的多线程实现开始熟悉，自己敲敲常见的多线程实现demo，以及常用的几个线程池，再去比较每个实现方法的优缺点，参数。
	 *   			5.再由此切入到线程安全，并发锁等等。记得整理！
	 *   		四、大数据
	 *   			熟悉大数据项目里的技术栈和流程，理解并整理常见大数据面试题
	 *   		五、其他
	 *   			1.对数据库、操作系统、计算机网络常见面试题进行熟悉。因为这些在面试中不会占很大比例，而且问来问去也是那几题，所以放到最后。
	 *   			2.看书籍，系统梳理
	 *   		六、实战检验
	 *   			投递小厂练手
	 *   			面试前夕，打开简历，拿一张白纸，把自己当成面试官，手撸思维导图。从自我介绍开始，然后就是项目介绍，其次就是自己负责的部分以及项目难点。
	 *   
	 *   
	 *   		简历中要体现：
	 *   			微服务：			SpringCloud、SpringBoot、Dubbo等
	 *   			分布式服务框架：	Zookeeper等
	 *   			消息队列：			Kafka、RabbitMQ、RocketMQ等
	 *   			内存数据库：		Memcached、Redis等
	 *   			分布式搜索引擎：	Solr、Lucene、ES等
	 *   			大数据框架：		Hadoop、Hive、Spark等
	 *   
	 *   			Javase、集合源码、JVM、多线程、IO等
	 *   			数据库、计算机网络、操作系统
	 *   			基本的排序和选择算法、剑指offer、牛客148题Leetcode等
	 *   
	 *   			
	 *   		从零到一整体的工作能力：
	 *   		      工具环境：
	 *   			svn + ea，	 设计
	 *   			git + maven，开发
	 *   			ci + k8s	 运维
	 *   		      方法论：
	 *   			DDD			设计
	 *   		 	TDD			开发
	 *   			GitFlow		开发
	 */
}