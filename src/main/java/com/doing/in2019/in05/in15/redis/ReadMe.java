package com.doing.in2019.in05.in15.redis;

public class ReadMe {

	/**
	 * Redis
	 * 
	 * 		源代码少，可以吃透
	 * 
	 * 		排行榜系统	（按热度排名、按发布时间排名）
	 * 		计数器应用	（每次播放和浏览加1的操作）
	 * 		社交网络	（赞/踩、粉丝、共同好友、推送、下拉刷新）
	 * 		消息队列	（发布订阅、阻塞队列的功能，不如专业的消息队列强大）
	 * 		分布式锁	（setnx）
	 * 		典型场景：作为Web服务和MySQL中间的缓存层
	 * 
	 * 		所有数据放在内存			（不适合大规模数据，适合小规模热点数据）
	 * 		非阻塞io
	 * 		单线程无切换和竞争问题
	 * 
	 * 
	 * 		快照、日志形式持久化到磁盘
	 * 
	 * 		字符串	（值最大不能超过512M）
	 * 			1.原生字符串缓存，开销太大		序列化字符串缓存，序列化开销，每次更新都要全部操作一次
	 * 			2.计数器，视频播放数，需要考虑防作弊、数据持久化、不同维度等	
	 * 			3.共享session，解决Web服务横向扩展时的状态问题
	 * 			4.限速，例如短信验证码
	 * 		哈希
	 * 			1.缓存一个对象比如UserInfo，要控制内部编码，hashtable消耗内存更多
	 * 		列表
	 * 			1.消息队列
	 * 			2.文章列表
	 * 		集合
	 * 			1。标签，用户的兴趣点，还可以找到有共同兴趣点的人。
	 * 		有序集合
	 * 			1.排行榜系统
	 * 
	 * wget http://download.redis.io/releases/redis-5.0.5.tar.gz		下载到当前目录
	 * tar xzf redis-5.0.5.tar.gz										解压缩
	 * ln -s redis-5.0.5 redis											建立redis目录的软连接
	 * cd redis-5.0.5													进入目录
	 * make																编译
	 * make install														安装到usr/local/bin/下，可以在任意目录下执行redis命令
	 * 
	 * redis-cli -v														查看版本
	 * redis-server								生产环境中使用配置文件启动redis
	 * 
	 * 
	 * 项目上线前，先关缓存层测试
	 */
}